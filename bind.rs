#![allow(non_camel_case_types)]
// This Crate was automatically generated by FABGen
// Do not modify this file manually

extern "C" { 


// return_int ...
fn return_int() -> (i32){
let retval = my_testreturn_int()
return retval = 
}


// return_float ...
fn return_float() -> (f32){
let retval = my_testreturn_float()
return retval = 
}


// return_const_char_ptr ...
fn return_const_char_ptr() -> (String){
let retval = my_testreturn_const_char_ptr()
let mut retval_rust = string(retval = CString(*)
);
return retval_rust
}


// return_int_by_pointer ...
fn return_int_by_pointer() -> (*i32){
let retval = my_testreturn_int_by_pointer()
return (*i32)(unsafe.Pointer(retval))
}


// return_int_by_reference ...
fn return_int_by_reference() -> (*i32){
let retval = my_testreturn_int_by_reference()
return (*i32)(unsafe.Pointer(retval))
}


// add_int_by_value ...
fn add_int_by_value(a : i32 ,b : i32) -> (i32){
ato_c = a
bto_c = b
let retval = my_testadd_int_by_value(ato_c ,bto_c)
return retval = 
}


// add_int_by_pointer ...
fn add_int_by_pointer(a : *i32 ,b : *i32) -> (i32){
ato_c = &a
bto_c = &b
let retval = my_testadd_int_by_pointer(ato_c ,bto_c)
return retval = 
}


// add_int_by_reference ...
fn add_int_by_reference(a : *i32 ,b : *i32) -> (i32){
ato_c = &a
bto_c = &b
let retval = my_testadd_int_by_reference(ato_c ,bto_c)
return retval = 
}


}
